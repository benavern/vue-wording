import _JSON$stringify from'babel-runtime/core-js/json/stringify';import _typeof from'babel-runtime/helpers/typeof';import _Object$keys from'babel-runtime/core-js/object/keys';import _get from'lodash.get';function replaceTemplateStrings(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:'',b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};return _Object$keys(b).forEach(function(c){if('string'==typeof b[c]||'number'==typeof b[c]){var d=new RegExp('#{'+c+'}','g');a=a.replace(d,b[c])}}),a.replace(/#{\w*}/g,'')}function processwording(a,b){return'string'==typeof a?replaceTemplateStrings(a,b):'object'===('undefined'==typeof a?'undefined':_typeof(a))?a instanceof Array?a.map(function(a){return processwording(a,b)}):(_Object$keys(a).forEach(function(c){a[c]=processwording(a[c],b)}),a):a}var WordingPlugin={install:function(a,b){var c=b.lang,d=c===void 0?'en':c,e=b.wording,f=e===void 0?{}:e;({})===!f[d]&&console.warn('[WORDING PLUGIN] No wording provided'),f[d]||console.warn('[WORDING PLUGIN] this lang is not supported'),a.prototype.$t=function(a,b){try{var c=JSON.parse(_JSON$stringify(f));return processwording(_get(c,d+'.'+a,a),b)}catch(a){console.error(a)}}}};'undefined'!=typeof window&&window.Vue&&window.Vue.use(WordingPlugin);export default WordingPlugin;